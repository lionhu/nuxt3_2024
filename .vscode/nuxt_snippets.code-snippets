{
  // Place your nuxt3-awesome-starter 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
  // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
  // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
  // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
  // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
  // Placeholders with the same ids are connected.
  // Example:
  // "Print to console": {
  // 	"scope": "javascript,typescript",
  // 	"prefix": "log",
  // 	"body": [
  // 		"console.log('$1');",
  // 		"$2"
  // 	],
  // 	"description": "Log output to console"
  // }
  "Nuxt vue file base": {
    "scope": "javascript,vue,typescript",
    "prefix": "nxbase",
    "body": [
      "<script lang=\"ts\" setup>",
      "$1"
      "</script>"
      "<template>",
      "<div>",
      "$2",
      "</div>",
      "</template>"
     "<style scoped lang=\"scss\"></style>"
    ],
    "description": "Log output to console",
  },
  "Nuxt define props": {
    "scope": "javascript,vue,typescript",
    "prefix": "nxprops",
    "body": [
      "const props = defineProps({",
      "  modelValue: {",
      "    type: $1,",
      "    default: $2,",
      "  },",
      "})"
    ],
    "description": "Log output to console",
  },
  "Nuxt useSyncProps": {
    "scope": "javascript,vue,typescript",
    "prefix": "nxsyncprops",
    "body": [
      "const emit = defineEmits(['update:modelValue'])",
      "const checked = useSyncProps<$1>(props, 'modelValue$2', emit)",
      "// emit('update:modelValue', target.checked)",
    ],
    "description": "Log output to console",
  },
}
